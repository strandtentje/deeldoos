{
	#include f"settings.conf"

	item = {
		dir = Template(f"templates/directory.html");
		file = Template(f"templates/file.html");		
	};

	finder = {
		dir = LookupReader("dirindex[q]") {
			iterator->item.dir;
		};
		file = LookupReader("fileindex[q]") {
			iterator->item.file;
		};
	};

	instances = {
		navigate = Template(f"templates/deeldoos.html") {
			browser->FilesystemBrowser(rootpath = settings.rootpath) {
				diritem->item.dir;
				fileitem->item.file;
			};
		};

		findfile = GetFieldReader(field_q = ".{1,45}") {
			form->Template(f"templates/zoekpagina.html") {
				directories->finder.dir;
				files->finder.file;
			};
			successful->.form_branch;
		};

		content = Dir() {
			main->Template(f"templates/menu.html") {
				user->Write(format = settings.nickname);
				hub->Write(format = settings.hub);
			};
			navigate->instances.navigate;
			search->instances.findfile;
			about->Template(f"templates/about.html");
		};

		deeldoos = Dir() {
			default->Template(f"templates/skelet.html") {
				style->Module(file = f"style.conf", branch = "style");
				content->instances.content;
			};
			static->Fileserver(f"static|png,js,jpg,zip,gif");
			getfile->Fileserver(rootpath = settings.rootpath, allowany=true);
			tar->Tarballer(rootpath = settings.rootpath);
			hub-><f"hub.conf@begin">(hubip = settings.hub.ip, hubport = settings.hub.port.http);
			signon-><f"signon.conf@begin">(
				hubip = settings.hub.ip, 
				hubport = settings.hub.port.http,
				nickname = settings.nickname,
				port = 28180
			) {
				failed->Template(f"templates/registratiefout.html");
				registered->Template(f"templates/geregistreerd.html");
			};
			window->Template(f"templates/window.html") {
				body->instances.content;
			};
		};

		filewalker = FilesystemIndexer(rootpath = settings.rootpath) {
			newfile->LookupWriter("fileindex[keywords]", metaname = "fullname");
			newdirectory->LookupWriter("dirindex[keywords]", metaname = "fullname");
			deletedfile->LookupExterminator(lookupname = "fileindex", metaname = "fullname");
			deleteddirectory->LookupExterminator(lookupname = "dirindex", metaname = "fullname");
		};

		signon = Schedule("*/10 * * * *") {
			successful-><f"signon.conf@begin">;
		};
	};
}
